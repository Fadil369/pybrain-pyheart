name: Test PyBrain & PyHeart

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Exclude some combinations to speed up CI
          - os: windows-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.8'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio pytest-mock

    - name: Install PyBrain
      run: |
        cd pybrain-pkg
        pip install -e .[dev]

    - name: Install PyHeart
      run: |
        cd pyheart-pkg
        pip install -e .[dev]

    - name: Test PyBrain
      run: |
        cd pybrain-pkg
        pytest tests/ -v --cov=pybrain --cov-report=xml --cov-report=term-missing

    - name: Test PyHeart
      run: |
        cd pyheart-pkg
        pytest tests/ -v --cov=pyheart --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./pybrain-pkg/coverage.xml,./pyheart-pkg/coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy

    - name: Check code formatting with Black
      run: |
        black --check --diff pybrain-pkg/src/ pyheart-pkg/src/

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff pybrain-pkg/src/ pyheart-pkg/src/

    - name: Lint with flake8
      run: |
        flake8 pybrain-pkg/src/ pyheart-pkg/src/ --max-line-length=100

    - name: Type check with mypy
      run: |
        mypy pybrain-pkg/src/pybrain/
        mypy pyheart-pkg/src/pyheart/
      continue-on-error: true  # MyPy can be strict, continue for now

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Security scan with Bandit
      run: |
        bandit -r pybrain-pkg/src/ pyheart-pkg/src/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Check dependencies with Safety
      run: |
        cd pybrain-pkg && safety check
        cd ../pyheart-pkg && safety check
      continue-on-error: true